具体的操作步骤如下：
1、把smslib-3.3.0b2.jar、comm.jar与log4j-1.2.11.jar，放入到工程的lib中；
2、把javax.comm.properties放到%JAVA_HOME%/jre/lib下；
3、把win32com.dll放到%JAVA_HOME%/jre/bin下；
4  把comm.jar放到%JAVA_HOME%/jre/ext下
注意：路径放错，调用起来就会报错；JDK的版本，用的版本是jdk-1_5_0_04。

这样配置好了，运行下面的代码就可以发短息了，具体的代码如下：


import org.smslib.IOutboundMessageNotification;
import org.smslib.Outbou、ndMessage;
import org.smslib.Service;
import org.smslib.Message.MessageEncodings;
import org.smslib.modem.SerialModemGateway;

public class SendMessage {
 public class OutboundNotification implements IOutboundMessageNotification {
  public void process(String gatewayId, OutboundMessage msg) {
   System.out.println("Outbound handler called from Gateway: "
     + gatewayId);
   System.out.println(msg);
  }
 }
 @SuppressWarnings("deprecation")
 public void sendSMS(String mobilePhones, String content) {
  Service srv;
  OutboundMessage msg;
  OutboundNotification outboundNotification = new OutboundNotification();
  srv = new Service();
  SerialModemGateway gateway = new SerialModemGateway("modem.com3",
    "COM3", 9600, "wavecom", ""); //设置端口与波特率
  gateway.setInbound(true);
  gateway.setOutbound(true);
  gateway.setSimPin("0000");
  gateway.setOutboundNotification(outboundNotification);
  srv.addGateway(gateway);
  System.out.println("初始化成功，准备开启服务");
  try {
   srv.startService();
   System.out.println("服务启动成功");
   String[] phones = mobilePhones.split(",");
   for (int i = 0; i < phones.length; i++) {
    msg = new OutboundMessage(phones[i], content);
    msg.setEncoding(MessageEncodings.ENCUCS2); // 中文
    srv.sendMessage(msg);
   }
   srv.stopService();
  } catch (Exception e) {
   e.printStackTrace();
  }
 }
 public static void main(String[] args) {
  SendMessage sendMessage = new SendMessage();
  sendMessage.sendSMS("您要发送的手机号", "您要发送的内容！");
 }
}


// 监听短信接收服务

import org.smslib.IInboundMessageNotification;
import org.smslib.InboundMessage;
import org.smslib.Message.MessageTypes;
import org.smslib.Service;
import org.smslib.modem.SerialModemGateway;


/**
  * 监听短信接收服务
  *
  * @author ZHJH
  *
  */
public class AcceptMessages
{
	private Service	srv;

	public void acceptSMS()
	{
		// 实例化短信接入监听
		InboundMessageNotification inboundMessageNotification = new InboundMessageNotification();
		// 创建服务
		srv = new Service();
		// 设置相关参数（一般情况下以下默认参数不要变）
		SerialModemGateway gateway = new SerialModemGateway("modem.com1",
				"COM1", 9600, "wavecom", "");
		// 设置短信接收状态为可接收
		gateway.setInbound(true);
		// 设置短信发送状态为可发送
		gateway.setOutbound(true);
		gateway.setSimPin("0000");
		// 添加短信接收监听器
		gateway.setInboundNotification(inboundMessageNotification);
		// 添加网关参数到服务
		srv.addGateway(gateway);
		System.out.println("初始化成功，准备开启服务");
		try
		{
			// 开启服务
			srv.startService();
			System.out.println("服务启动成功");
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}

	/**
	 * 短信接收服务
	 *
	 * @author ZHJH
	 *
	 */
	private class InboundMessageNotification implements
			IInboundMessageNotification
	{

		@Override
		public void process(String string, MessageTypes messageTypes,
				InboundMessage message)
		{
			// 当前信息接收到别的用户发送的信息
			if (messageTypes == MessageTypes.INBOUND)
			{
				System.out.println("发送时间 ： " + message.getDate()
						+ " ； 发送号码是 ： " + message.getOriginator()
						+ " ； 内容是：   " + message.getText() + " ; 属性是 ： "
						+ message.getType());
				try
				{
					// 删除当前接收到的信息
					srv.deleteMessage(message);
				}
				catch (Exception e)
				{
					e.printStackTrace();
				}
			}
		}
	}

	public static void main(String[] args)
	{
		AcceptMessages acceptMessages = new AcceptMessages();
		acceptMessages.acceptSMS();
	}
}


代码贴完了，下面告诉遇到的常见问题，并且是如何解决的：
如果报了如下错误： Exception in thread "main" java.lang.NoClassDefFoundError: org/apache/log4j/Logger
那是因为没有把log4j-1.2.13.jar倒入到工程中。

